#!/usr/bin/env bash
set -eu -o pipefail

warn() { echo 1>&2 "$@"; }

####################################################################
#   Main

export T8_PROJDIR=$(cd "$(dirname "$0")" && pwd -P)
t8dir=t8dev    # or whatever your submodule path is
[[ -r $T8_PROJDIR/$t8dir/t8setup.bash ]] \
    || git submodule update --init "$T8_PROJDIR/$t8dir"
. "$T8_PROJDIR"/$t8dir/t8setup.bash

t8dev buildtoolset asl

####################################################################
#   XXX It would be nice to be able here to build the unit test versions of
#   source under 8bitdev/. However, there are two path issues that need to
#   be resolved to do this:
#   1. The tests (.pt files) underneath 8bitdev/src/ assume that 8bitdev/
#      is in the Python import search path so they can import common test
#      code. This is true when building with 8bitdev/ as the project
#      directory, but not with a different project directory. This could be
#      hacked in with `export PYTHONPATH=$B8_PROJDIR/8bitdev/`,
#      though that may not be the best solution.
#   2. The tests specify the object files to be built and loaded using
#      paths that implicitly give the source file relative to 8bitdev/,
#      e.g. `src/mc68/simple.p` However, here they are relative to
#      $B8_PROJDIR, e.g. `$B8_PROJDIR/8bitdev/src/mc68/simple.a65`. It's
#      not clear if it's worth trying to change the system to handle things
#      being built from different locations due to different settings of
#      $B8_PROJDIR.
#   For the moment, at least, we just assume that everything under 8bitdev/
#   is already tested and working and have our programs here include this
#   presumably-tested-and-working source.

####################################################################

t8dev aslt8dev          # assemble all source code from t8dev

t8dev aslauto src/
manual_build=(
    #   Top-level programs whose build is not triggered by automated tests.
    exe/c64/hello.a65
    exe/c64/e_calc.a65
    exe/plus4/hello.a65
    exe/plus4/e_calc.a65
    exe/plus4/sample.a65
    exe/jr200/hello.a68
    exe/tmc68/hello.a68
    exe/jr200/e_calc.a68
)
t8dev asl "${manual_build[@]}"

t8dev pytest -- "$@"
